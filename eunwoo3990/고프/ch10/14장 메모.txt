14장 STL 컨테이너

3) 벡터
 - 어떤 타입이나 가능
 - 동적배열 방식
 - vector<double> scores(10);
 - 반드시 크기 제시하기
 - push_back() : 공백 벡터에서 시작하여 성적이 하나씩 추가될 때마다 벡터 크기 확대 (비효율적)
 - pop_back() : 벡터의 끝에서 요소제거 크기 감소 (리턴은 하지 않음)

 - 반복자 : 일반화된 포인터
vector<타입>::<iterator> it;
 - 벡터 순회 시 사용

 - insert() : 벡터의 중간 위치에 자료 추가
 - erase() : 중간요소 삭제, 지정범위를 삭제

4) 컨테이너의 공통 멤버 함수 
5) deque : 전단 후단 삽입과 삭제 가능
6) 리스트 : 연결리스트 중간위치에서의 삽입이나 삭제가 빈번한 경우 유용
 - 반복자를 이용하여 양방향 이동 가능
 - 벡터 대비 리스트의 차이점 : 임의 접근 불가능, 효율적인 삽입이나 삭제, 링크 저장을 위한 메모리 차지
 - 중간 삽입 : insert()
 - 리스트에서 자료 삭제 : 박복자가 가리키는 요소 삭제 or 범위안의 요소 삭제
 erase() : 현재 요소 삭제, 다음요소의 위치 반환

7) 집합
 - 순서에 상관 없음
 - erase(), find() : 탐색 key값이 있으면 해당 위치 반환, 업으면 end() 반환
 
8) map : 사전과 같은 자료구조
map<string, string> dic;
9) 컨테이너 어댑터 - 스택, 큐, 우선순위 큐